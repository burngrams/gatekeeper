"use strict";const e=require("electron"),i="electron-trpc";function T(n){const o=Object.create(null);for(const t in n){const l=n[t];o[l]=t}return o}const a={PARSE_ERROR:-32700,BAD_REQUEST:-32600,INTERNAL_SERVER_ERROR:-32603,UNAUTHORIZED:-32001,FORBIDDEN:-32003,NOT_FOUND:-32004,METHOD_NOT_SUPPORTED:-32005,TIMEOUT:-32008,CONFLICT:-32009,PRECONDITION_FAILED:-32012,PAYLOAD_TOO_LARGE:-32013,UNPROCESSABLE_CONTENT:-32022,TOO_MANY_REQUESTS:-32029,CLIENT_CLOSED_REQUEST:-32099};T(a);T(a);var c,s,r,E,R,O;typeof window>"u"||"Deno"in window||((s=(c=globalThis.process)==null?void 0:c.env)==null?void 0:s.NODE_ENV)==="test"||(E=(r=globalThis.process)==null?void 0:r.env)!=null&&E.JEST_WORKER_ID||(O=(R=globalThis.process)==null?void 0:R.env)!=null&&O.VITEST_WORKER_ID;const d=()=>{const n={sendMessage:o=>e.ipcRenderer.send(i,o),onMessage:o=>e.ipcRenderer.on(i,(t,l)=>o(l))};e.contextBridge.exposeInMainWorld("electronTRPC",n)};process.once("loaded",async()=>{d();const n={ip:await e.ipcRenderer.invoke("getIp"),allocationsModeSetting:await e.ipcRenderer.invoke("getAllocationsModeSetting"),toggleAllocationsModeSetting:async()=>{await e.ipcRenderer.invoke("toggleAllocationsModeSetting")}};e.contextBridge.exposeInMainWorld("electronAPI",n)});
